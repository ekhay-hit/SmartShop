@page "/register"
@inject IAuthServiceUI AuthService

<PageTitle>Register</PageTitle>

<h3>Register</h3>

<EditForm Model ="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label for="email">Email</label>
        <input id="email" @bind-value ="user.Email" class=" form-control" />
        <ValidationMessage For="@(() => user.Email)"/>
    </div>

    <div class=" mb-3">
        <label for=" password" >Password</label>
        <input id="password" @bind-value="user.Password" class="form-control" type="password"/>
        <ValidationMessage For="@(() => user.Password)" />
    </div>

    <div calss="mb-3">
        <label for=" confirmPassword">Confirm Password</label>
        <input id="confirmPassword" @bind-value="user.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.ConfirmPassword)" />

    </div>

    <button type="submit" class=" mt-3 btn btn-primary">Register</button>
    <div class="@messageCssClass mt-3">
        <span>@message</span>
    </div>
    
    
</EditForm>



@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async void HandleRegistration()
    {
        var resutl = await AuthService.Register(user);
        message = resutl.Message;
        if (resutl.success)
            messageCssClass = "text-success";
        else
            messageCssClass = "text-danger";
    }

}
